package asistenteVirtual.unidadesMedicion;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.text.DecimalFormat;

import asistenteVirtual.Utilitarias;

public class ConvertorDeUnidades {
	
	public static String darConversion(String cadena) {
		
		DecimalFormat df = new DecimalFormat("#.#######");
		double resultado=0;		
		Integer cantidad= Utilitarias.buscarEntero(cadena);
		String paquete = ConvertorDeUnidades.class.getPackage().getName()+".";		
		String unidadOriginal= ConvertorDeUnidades.buscarUnidad(cadena.substring(cadena.indexOf(cantidad.toString())));		
		String unidadNueva = ConvertorDeUnidades.buscarUnidad(cadena.substring(0,cadena.indexOf(cantidad.toString())));	
		String aux= " equivale a ";
		
		try {
		Class<?> UnidadaOriginalClass = Class.forName(paquete+unidadOriginal);
		Class<?> UnidadaNuevaClass = Class.forName(paquete+unidadNueva);
		
		Constructor<?> constructor = UnidadaOriginalClass.getConstructor(double.class);
		Object uOri = constructor.newInstance(cantidad);		
		
		Constructor<?> constructor2 = UnidadaNuevaClass.getConstructor(double.class);	
		Object uNue = constructor2.newInstance(0);	
		
		Method methodConvert = UnidadaOriginalClass.getDeclaredMethod("convertirA",uNue.getClass());		
		uNue=methodConvert.invoke(uOri,uNue);
		
		Method methodGetCant = uNue.getClass().getDeclaredMethod("getCantidad");		
		resultado =  (double) methodGetCant.invoke(uNue);	
		
		}catch (Exception e) {
			System.out.println("No se puedo realizar la conversion");
		}
		
		// todos estos if son para mostras bien la salida, ej si llega a ser cubico, si es unidad en plural o singular, etc
		if(resultado != 1) {
			if(cadena.contains("cúbico"))
				unidadNueva = unidadNueva.substring(0,unidadNueva.indexOf("Cubico")).toLowerCase()+"s"+" cúbicos";
			else
				unidadNueva = unidadNueva.toLowerCase()+"s";
		}
		else {
			if(cadena.contains("cúbico"))
				unidadNueva = unidadNueva.substring(0,unidadNueva.indexOf("Cubico")).toLowerCase()+" cúbicos";
		}
		
		if(cantidad != 1) {
			if(cadena.contains("cúbico"))
				unidadOriginal = unidadOriginal.substring(0,unidadOriginal.indexOf("Cubico")).toLowerCase()+"s"+" cúbicos";
			else
				unidadOriginal = unidadOriginal.toLowerCase()+"s";
			aux= " equivalen a ";
		}
		else {
			if(cadena.contains("cúbico"))
				unidadOriginal = unidadOriginal.substring(0,unidadOriginal.indexOf("Cubico")).toLowerCase()+" cúbicos";
		}	
		
				
		String res = cantidad+" "+unidadOriginal.toLowerCase()+aux+df.format(resultado).replace(",", ".")+" "+unidadNueva.toLowerCase();
			
		return res; //ConvertorDeUnidades.darFormatoSalida(unidadOriginal, unidadNueva, cantidad, resultado);

	}	
	
	public static String buscarUnidad(String cadena) {
		String uni[]= {"Miligramo","Gramo","Kilo","Dracma","Onza","Libra",
				"Milimetro","Centimetro","Metro","Kilometro",
				"Pie","Pulgada","Yarda","Segundo","Minuto","Hora"};
		
		String unidad;
		int i=0;
		
		while(!cadena.contains(uni[i].toLowerCase()))
			i++;
		
		unidad= uni[i];		
		
		if(cadena.contains("cúbico") || cadena.contains("cúbica") )
			unidad = unidad+"Cubico";
			
		return unidad;
		
	}
	
	public static String darFormatoSalida(String uniOri,String uniNue,double cantOri,double cantNue) {
		DecimalFormat df = new DecimalFormat("#.#######");
		String aux= " equivale a ";
		
		if(cantNue != 1) {
			if(uniNue.contains("Cubico"))
				uniNue = uniNue.substring(0,uniNue.indexOf("Cubico")).toLowerCase()+"s"+" cúbicos";
			else
				uniNue = uniNue.toLowerCase()+"s";
		}
		else {
			if(uniNue.contains("Cubico"))
				uniNue = uniNue.substring(0,uniNue.indexOf("Cubico")).toLowerCase()+" cúbico";
		}
		
		if(cantOri != 1) {
			if(uniOri.contains("cúbico"))
				uniOri = uniOri.substring(0,uniOri.indexOf("Cubico")).toLowerCase()+"s"+" cúbicos";
			else
				uniOri = uniOri.toLowerCase()+"s";
			aux= " equivalen a ";
		}
		else {
			if(uniOri.contains("cúbico"))
				uniOri = uniOri.substring(0,uniOri.indexOf("Cubico")).toLowerCase()+" cúbico";
		}	
		
				
		String res = cantOri+" "+uniOri.toLowerCase()+aux+df.format(cantNue).replace(",", ".")+" "+uniNue.toLowerCase();
		
		return res;
			
	}

	
}
