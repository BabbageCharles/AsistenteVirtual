package asistenteVirtual;

import java.util.Arrays;
import java.util.List;

public class AsistenteEscucha extends AsistenteVirtual {

	// CONSTRUCTORES
	public AsistenteEscucha(String s) {
		// TODO Auto-generated constructor stub
	}

	public AsistenteEscucha() {
		// TODO Auto-generated constructor stub
	}

	public static void main(String[] args) {
		/*
		for(int i=0;i<60;i++){
		System.out.println(AsistenteEscucha.escuchar("@jenkins contame chuck norris facts"));
		}
		System.out.println(" ");
		System.out.println(AsistenteEscucha.escuchar("@jenkins jaja contame mas facts"));
		System.out.println(AsistenteEscucha.escuchar("@jenkins quiero saber facts sobre chuck norris"));
		System.out.println(AsistenteEscucha.escuchar("@jenkins contame algo sobre norris chuck"));
		 */


	}

	// RESPONDE
	public static String escuchar(String msjIn) {
		AsistenteEscucha nuevoEscucha = new AsistenteEscucha();
		
		if (nuevoEscucha.reconocerPedidos(msjIn).equals("Saludar"))// UN SOLO PEDIDO
			return AsistenteVirtual.saludar(msjIn);

		if (nuevoEscucha.reconocerPedidos(msjIn).equals("DarFecha"))
			return AsistenteVirtual.darFecha(msjIn);

		if (nuevoEscucha.reconocerPedidos(msjIn).equals("Agradecer"))
			return AsistenteVirtual.agradecer(msjIn);
		
		if (nuevoEscucha.reconocerPedidos(msjIn).equals("Calcular")) {
			if(msjIn.contains("%"))
				return AsistenteVirtual.porcentaje(msjIn);
			else
			{
				if(msjIn.contains("(")){
					int pos= msjIn.indexOf("(");
					String s = msjIn.substring(pos);
					return AsistenteVirtual.calculo(s);
				}
				else {
				String n= Integer.toString(Utilitarias.buscarEntero(msjIn));				
				int pos= msjIn.indexOf(n);
				String s = msjIn.substring(pos);				
				return AsistenteVirtual.calculo(s); 
				}
			}			
		}
		
		if(msjIn.contains("leyes") || msjIn.contains("robótica")) 						
			return AsistenteVirtual.leyesRobotica(msjIn);
		
		if (nuevoEscucha.reconocerPedidos(msjIn).equals("UnidadMedicion"))
			return AsistenteVirtual.convertor(msjIn);

		//pato
		if (nuevoEscucha.reconocerPedidos(msjIn).equals("ChuckNorris"))
			return AsistenteVirtual.chFacts(msjIn);


		return "Disculpa... no entiendo el pedido, @" + USUARIO + " ¿podrías repetirlo?";// NO ENTENDIMIENTO DEL MENSAJE
	}

	// RECONOCE DE QUE PEDIDO SE TRATA
	public String reconocerPedidos(String msj) {
		String error = new String("No entiendo el mensaje");
		List<String> saludos = Arrays.asList("chau", "adios", "hasta luego", "bye", "goodbye", "good bye", "saludos",
				"s2", "hola", "hello", "buen dia", "buen día", "hey", "buenos dias", "buenas", "buenas tardes",
				"buenas noches", "alo", "holis", "holi", "hi");
		List<String> agradecimientos = Arrays.asList("agradezco", "gracias", "thanks", "ty", "thank you", "arigato");
		List<String> fechas = Arrays.asList("qué día será", "que dia sera", "que dia", "cuantos dias", "que dia será",
				"lunes", "martes", "miércoles", "jueves", "viernes", "cuántos dias", "qué día será dentro de",
				"qué dia", "cuánto falta", "qué dia", "cuántas semanas", "cuántos meses", "cuantas semanas",
				"cuantos meses", "hace cuánto", "pasaron desde", "faltan hasta", "días para", "semanas para",
				"meses para","la hora","hora es","la fecha por favor","¿qué día es","hoy","me decís la fecha");
		List<String> calculos = Arrays.asList("Cuánto es", "%", "+", "-", "elevado a", "raiz de", "menos", "*", "5/5",
				":", "^", "dividido", "sqrt", "porciento", "resultado de", "al cuadrado", "al cubo", "a la cuarta",
				"raiz cuadrada", "raíz cúbica");
		
		List<String> unidadDeMasa = Arrays.asList("miligramo","miligramos","gramo","gramos",
				 "kilo","kilos","dracma","dracmas","onza","onzas","libra","libras",
				 "centimetros","centimetro","milimetro",
					"milimetros","Kilometros","Kilometro","metros","metro","yardas","yarda","pulgadas",
					"pulgada","pies","pie","segundo","segundos","minuto","minutos");
		
		////pato
		List<String> chuckNorris =Arrays.asList("chuck","norris","facts","fact");
		////pato

		String a = saludos.stream().filter(x -> msj.toLowerCase().contains(x)).findFirst().orElse(error);
		String b = agradecimientos.stream().filter(x -> msj.toLowerCase().contains(x)).findFirst().orElse(error);
		String c = fechas.stream().filter(x -> msj.toLowerCase().contains(x)).findFirst().orElse(error);
		String d = calculos.stream().filter(x -> msj.toLowerCase().contains(x)).findFirst()
				.orElse("No entiendo el mensaje");
		String e= unidadDeMasa.stream().filter(x -> msj.toLowerCase().contains(x)).findFirst().orElse(error);
		String f=chuckNorris.stream().filter(x -> msj.toLowerCase().contains(x)).findFirst().orElse(error);

		// un solo pedido
		if (!a.equals(error) && b.equals(error) && c.equals(error) && d.equals(error) && e.equals(error)&& f.equals(error))
			return "Saludar";

		if (a.equals(error) && !b.equals(error) && c.equals(error) && d.equals(error) && e.equals(error)&& f.equals(error))
			return "Agradecer";

		if (a.equals(error) && b.equals(error) && !c.equals(error) && d.equals(error) && e.equals(error)&& f.equals(error))
			return "DarFecha";

		if (a.equals(error) && b.equals(error) && c.equals(error) && !d.equals(error) && e.equals(error)&& f.equals(error))
			return "Calcular";
		
		if (a.equals(error) && b.equals(error) && c.equals(error) && d.equals(error) && !e.equals(error)&& f.equals(error))
			return "UnidadMedicion";
		
		///pato
		if(a.equals(error) && b.equals(error) && c.equals(error) && d.equals(error) && e.equals(error) && !f.equals(error))
			return "ChuckNorris";
		///pato

		return "Disculpa... no entiendo el pedido, @" + USUARIO + " ¿podrías repetirlo?";
	}

}
